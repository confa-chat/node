// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: confa/channel/v1/channels.proto

package channelv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Channel struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Channel:
	//
	//	*Channel_TextChannel
	//	*Channel_VoiceChannel
	Channel       isChannel_Channel `protobuf_oneof:"channel"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Channel) Reset() {
	*x = Channel{}
	mi := &file_confa_channel_v1_channels_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Channel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Channel) ProtoMessage() {}

func (x *Channel) ProtoReflect() protoreflect.Message {
	mi := &file_confa_channel_v1_channels_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Channel.ProtoReflect.Descriptor instead.
func (*Channel) Descriptor() ([]byte, []int) {
	return file_confa_channel_v1_channels_proto_rawDescGZIP(), []int{0}
}

func (x *Channel) GetChannel() isChannel_Channel {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *Channel) GetTextChannel() *TextChannel {
	if x != nil {
		if x, ok := x.Channel.(*Channel_TextChannel); ok {
			return x.TextChannel
		}
	}
	return nil
}

func (x *Channel) GetVoiceChannel() *VoiceChannel {
	if x != nil {
		if x, ok := x.Channel.(*Channel_VoiceChannel); ok {
			return x.VoiceChannel
		}
	}
	return nil
}

type isChannel_Channel interface {
	isChannel_Channel()
}

type Channel_TextChannel struct {
	TextChannel *TextChannel `protobuf:"bytes,1,opt,name=text_channel,json=textChannel,proto3,oneof"`
}

type Channel_VoiceChannel struct {
	VoiceChannel *VoiceChannel `protobuf:"bytes,2,opt,name=voice_channel,json=voiceChannel,proto3,oneof"`
}

func (*Channel_TextChannel) isChannel_Channel() {}

func (*Channel_VoiceChannel) isChannel_Channel() {}

type TextChannel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	ChannelId     string                 `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TextChannel) Reset() {
	*x = TextChannel{}
	mi := &file_confa_channel_v1_channels_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextChannel) ProtoMessage() {}

func (x *TextChannel) ProtoReflect() protoreflect.Message {
	mi := &file_confa_channel_v1_channels_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextChannel.ProtoReflect.Descriptor instead.
func (*TextChannel) Descriptor() ([]byte, []int) {
	return file_confa_channel_v1_channels_proto_rawDescGZIP(), []int{1}
}

func (x *TextChannel) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *TextChannel) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *TextChannel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type VoiceChannel struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerId      string                 `protobuf:"bytes,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	ChannelId     string                 `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	VoiceRelayId  []string               `protobuf:"bytes,4,rep,name=voice_relay_id,json=voiceRelayId,proto3" json:"voice_relay_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VoiceChannel) Reset() {
	*x = VoiceChannel{}
	mi := &file_confa_channel_v1_channels_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VoiceChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceChannel) ProtoMessage() {}

func (x *VoiceChannel) ProtoReflect() protoreflect.Message {
	mi := &file_confa_channel_v1_channels_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceChannel.ProtoReflect.Descriptor instead.
func (*VoiceChannel) Descriptor() ([]byte, []int) {
	return file_confa_channel_v1_channels_proto_rawDescGZIP(), []int{2}
}

func (x *VoiceChannel) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *VoiceChannel) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *VoiceChannel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VoiceChannel) GetVoiceRelayId() []string {
	if x != nil {
		return x.VoiceRelayId
	}
	return nil
}

var File_confa_channel_v1_channels_proto protoreflect.FileDescriptor

const file_confa_channel_v1_channels_proto_rawDesc = "" +
	"\n" +
	"\x1fconfa/channel/v1/channels.proto\x12\x10confa.channel.v1\"\x9f\x01\n" +
	"\aChannel\x12B\n" +
	"\ftext_channel\x18\x01 \x01(\v2\x1d.confa.channel.v1.TextChannelH\x00R\vtextChannel\x12E\n" +
	"\rvoice_channel\x18\x02 \x01(\v2\x1e.confa.channel.v1.VoiceChannelH\x00R\fvoiceChannelB\t\n" +
	"\achannel\"]\n" +
	"\vTextChannel\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x02 \x01(\tR\tchannelId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\"\x84\x01\n" +
	"\fVoiceChannel\x12\x1b\n" +
	"\tserver_id\x18\x01 \x01(\tR\bserverId\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x02 \x01(\tR\tchannelId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12$\n" +
	"\x0evoice_relay_id\x18\x04 \x03(\tR\fvoiceRelayIdB\xc8\x01\n" +
	"\x14com.confa.channel.v1B\rChannelsProtoP\x01Z?github.com/confa-chat/node/src/proto/confa/channel/v1;channelv1\xa2\x02\x03CCX\xaa\x02\x10Confa.Channel.V1\xca\x02\x10Confa\\Channel\\V1\xe2\x02\x1cConfa\\Channel\\V1\\GPBMetadata\xea\x02\x12Confa::Channel::V1b\x06proto3"

var (
	file_confa_channel_v1_channels_proto_rawDescOnce sync.Once
	file_confa_channel_v1_channels_proto_rawDescData []byte
)

func file_confa_channel_v1_channels_proto_rawDescGZIP() []byte {
	file_confa_channel_v1_channels_proto_rawDescOnce.Do(func() {
		file_confa_channel_v1_channels_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_confa_channel_v1_channels_proto_rawDesc), len(file_confa_channel_v1_channels_proto_rawDesc)))
	})
	return file_confa_channel_v1_channels_proto_rawDescData
}

var file_confa_channel_v1_channels_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_confa_channel_v1_channels_proto_goTypes = []any{
	(*Channel)(nil),      // 0: confa.channel.v1.Channel
	(*TextChannel)(nil),  // 1: confa.channel.v1.TextChannel
	(*VoiceChannel)(nil), // 2: confa.channel.v1.VoiceChannel
}
var file_confa_channel_v1_channels_proto_depIdxs = []int32{
	1, // 0: confa.channel.v1.Channel.text_channel:type_name -> confa.channel.v1.TextChannel
	2, // 1: confa.channel.v1.Channel.voice_channel:type_name -> confa.channel.v1.VoiceChannel
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_confa_channel_v1_channels_proto_init() }
func file_confa_channel_v1_channels_proto_init() {
	if File_confa_channel_v1_channels_proto != nil {
		return
	}
	file_confa_channel_v1_channels_proto_msgTypes[0].OneofWrappers = []any{
		(*Channel_TextChannel)(nil),
		(*Channel_VoiceChannel)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_confa_channel_v1_channels_proto_rawDesc), len(file_confa_channel_v1_channels_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_confa_channel_v1_channels_proto_goTypes,
		DependencyIndexes: file_confa_channel_v1_channels_proto_depIdxs,
		MessageInfos:      file_confa_channel_v1_channels_proto_msgTypes,
	}.Build()
	File_confa_channel_v1_channels_proto = out.File
	file_confa_channel_v1_channels_proto_goTypes = nil
	file_confa_channel_v1_channels_proto_depIdxs = nil
}
