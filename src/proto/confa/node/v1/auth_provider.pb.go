// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: confa/node/v1/auth_provider.proto

package nodev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AuthProvider struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Id    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name  string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Types that are valid to be assigned to Protocol:
	//
	//	*AuthProvider_OpenidConnect
	Protocol      isAuthProvider_Protocol `protobuf_oneof:"protocol"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthProvider) Reset() {
	*x = AuthProvider{}
	mi := &file_confa_node_v1_auth_provider_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthProvider) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthProvider) ProtoMessage() {}

func (x *AuthProvider) ProtoReflect() protoreflect.Message {
	mi := &file_confa_node_v1_auth_provider_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthProvider.ProtoReflect.Descriptor instead.
func (*AuthProvider) Descriptor() ([]byte, []int) {
	return file_confa_node_v1_auth_provider_proto_rawDescGZIP(), []int{0}
}

func (x *AuthProvider) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AuthProvider) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AuthProvider) GetProtocol() isAuthProvider_Protocol {
	if x != nil {
		return x.Protocol
	}
	return nil
}

func (x *AuthProvider) GetOpenidConnect() *OpenIDConnect {
	if x != nil {
		if x, ok := x.Protocol.(*AuthProvider_OpenidConnect); ok {
			return x.OpenidConnect
		}
	}
	return nil
}

type isAuthProvider_Protocol interface {
	isAuthProvider_Protocol()
}

type AuthProvider_OpenidConnect struct {
	OpenidConnect *OpenIDConnect `protobuf:"bytes,101,opt,name=openid_connect,json=openidConnect,proto3,oneof"`
}

func (*AuthProvider_OpenidConnect) isAuthProvider_Protocol() {}

type OpenIDConnect struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Issuer        string                 `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	ClientId      string                 `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret  string                 `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpenIDConnect) Reset() {
	*x = OpenIDConnect{}
	mi := &file_confa_node_v1_auth_provider_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenIDConnect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenIDConnect) ProtoMessage() {}

func (x *OpenIDConnect) ProtoReflect() protoreflect.Message {
	mi := &file_confa_node_v1_auth_provider_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenIDConnect.ProtoReflect.Descriptor instead.
func (*OpenIDConnect) Descriptor() ([]byte, []int) {
	return file_confa_node_v1_auth_provider_proto_rawDescGZIP(), []int{1}
}

func (x *OpenIDConnect) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *OpenIDConnect) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *OpenIDConnect) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

var File_confa_node_v1_auth_provider_proto protoreflect.FileDescriptor

const file_confa_node_v1_auth_provider_proto_rawDesc = "" +
	"\n" +
	"!confa/node/v1/auth_provider.proto\x12\rconfa.node.v1\"\x85\x01\n" +
	"\fAuthProvider\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12E\n" +
	"\x0eopenid_connect\x18e \x01(\v2\x1c.confa.node.v1.OpenIDConnectH\x00R\ropenidConnectB\n" +
	"\n" +
	"\bprotocol\"i\n" +
	"\rOpenIDConnect\x12\x16\n" +
	"\x06issuer\x18\x01 \x01(\tR\x06issuer\x12\x1b\n" +
	"\tclient_id\x18\x02 \x01(\tR\bclientId\x12#\n" +
	"\rclient_secret\x18\x03 \x01(\tR\fclientSecretB\xb7\x01\n" +
	"\x11com.confa.node.v1B\x11AuthProviderProtoP\x01Z9github.com/confa-chat/node/src/proto/confa/node/v1;nodev1\xa2\x02\x03CNX\xaa\x02\rConfa.Node.V1\xca\x02\rConfa\\Node\\V1\xe2\x02\x19Confa\\Node\\V1\\GPBMetadata\xea\x02\x0fConfa::Node::V1b\x06proto3"

var (
	file_confa_node_v1_auth_provider_proto_rawDescOnce sync.Once
	file_confa_node_v1_auth_provider_proto_rawDescData []byte
)

func file_confa_node_v1_auth_provider_proto_rawDescGZIP() []byte {
	file_confa_node_v1_auth_provider_proto_rawDescOnce.Do(func() {
		file_confa_node_v1_auth_provider_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_confa_node_v1_auth_provider_proto_rawDesc), len(file_confa_node_v1_auth_provider_proto_rawDesc)))
	})
	return file_confa_node_v1_auth_provider_proto_rawDescData
}

var file_confa_node_v1_auth_provider_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_confa_node_v1_auth_provider_proto_goTypes = []any{
	(*AuthProvider)(nil),  // 0: confa.node.v1.AuthProvider
	(*OpenIDConnect)(nil), // 1: confa.node.v1.OpenIDConnect
}
var file_confa_node_v1_auth_provider_proto_depIdxs = []int32{
	1, // 0: confa.node.v1.AuthProvider.openid_connect:type_name -> confa.node.v1.OpenIDConnect
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_confa_node_v1_auth_provider_proto_init() }
func file_confa_node_v1_auth_provider_proto_init() {
	if File_confa_node_v1_auth_provider_proto != nil {
		return
	}
	file_confa_node_v1_auth_provider_proto_msgTypes[0].OneofWrappers = []any{
		(*AuthProvider_OpenidConnect)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_confa_node_v1_auth_provider_proto_rawDesc), len(file_confa_node_v1_auth_provider_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_confa_node_v1_auth_provider_proto_goTypes,
		DependencyIndexes: file_confa_node_v1_auth_provider_proto_depIdxs,
		MessageInfos:      file_confa_node_v1_auth_provider_proto_msgTypes,
	}.Build()
	File_confa_node_v1_auth_provider_proto = out.File
	file_confa_node_v1_auth_provider_proto_goTypes = nil
	file_confa_node_v1_auth_provider_proto_depIdxs = nil
}
